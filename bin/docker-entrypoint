#!/bin/bash -e

# Enable jemalloc for reduced memory usage and latency.
if [ -z "${LD_PRELOAD+x}" ]; then
    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so.2 -print -quit)
    export LD_PRELOAD
fi

DATABASE_HOST=${DATABASE_HOST:-localhost}
DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
DATABASE_PASSWORD=${DATABASE_PASSWORD:-password}
DATABASE_NAME=${DATABASE_NAME:-test_db}

# If running the rails server then create or migrate existing database
if [ "${@: -2:1}" == "./bin/rails" ] && [ "${@: -1:1}" == "server" ]; then
  # echo "Preparing database..."
  # ./bin/rails db:prepare || { echo 'db:prepare failed' ; exit 1; }

  echo "Migrating database..."
  ./bin/rails db:migrate || { echo 'db:migrate failed' ; exit 1; }

  echo "Listing tables in the database..."
 # Check i  f Rails can connect to the database
  # echo "Checking database connection..."
  # RAILS_ENV=production ./bin/rails dbconsole -c || { echo 'Database connection failed' ; exit 1; }

  echo "Installing solid_cache..."
  ./bin/rails solid_cache:install || { echo 'solid_cache:install failed' ; exit 1; }

  # ./bin/rails admin:create RAILS_ENV=production
fi

exec "${@}"
