name: Pact Provider Verification

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  verify-pact:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Setup database
        run: |
          echo "test:
            adapter: postgresql
            host: localhost
            username: postgres
            password: password
            database: book_tracker_test" > config/database.yml
          bundle exec rails db:create db:migrate RAILS_ENV=test

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Download pact file from consumer release
        run: |
          mkdir -p pact

          RELEASE_ID=$(curl -s \
            https://api.github.com/repos/fpezcara/book-tracker-ui/releases/tags/pact-latest \
            | jq -r '.assets[] | select(.name | test("Book_Tracker_UI-Book_Tracker_API.json")) | .id')

          curl -L \
            -H "Accept: application/octet-stream" \
            https://api.github.com/repos/fpezcara/book-tracker-ui/releases/assets/$RELEASE_ID \
            -o pact/Book_Tracker_UI-Book_Tracker_API.json

      - name: Start Rails server
        run: |
          nohup bundle exec rails server -e test -p 3000 &

      - name: Verify against downloaded pact
        run: |
          bundle exec pact-provider-verifier \
            pact/Book_Tracker_UI-Book_Tracker_API.json \
            --provider-base-url=http://localhost:3000 \
            --provider-app-version=${{ github.sha }} \
            --publish-verification-results \
            --provider=BookTrackerAPI
